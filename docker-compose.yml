services:
  postgresql:
    image: bitnami/postgresql:17.0.0
    container_name: postgresql_database
    networks:
      - core-network
    volumes:
      - core-data:/var/lib/postgres/core-data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRESQL_PASSWORD: "phamnam123"
      POSTGRESQL_USER: "postgres"
      POSTGRESQL_DATABASE: "core"
      POSTGRESQL_REPLICATION_USE_PASSFILE: false
      POSTGRESQL_TIMEZONE: "Asia/Ho_Chi_Minh"
      POSTGRESQL_LOG_TIMEZONE: "Asia/Ho_Chi_Minh"
    ports:
      - 5432:5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRESQL_USER} -d ${POSTGRESQL_DATABASE}",
        ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped

  redis:
    image: bitnami/redis:7.4.1
    container_name: redis_serve_gocore
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=redis_password
    ports:
      - 6379:6379
    networks:
      - core-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  api:
    container_name: core_api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      GIN_MOD: "release"
      DB_SOURCE: "postgresql://postgres:phamnam123@postgresql_database:5432/core?sslmode=disable"
      ENVIRONMENT: "product"
      REDIS_ADDRESS_SERVER: "redis_serve_gocore:6379"
    networks:
      - core-network
    depends_on:
      postgresql:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    restart: "no"

networks:
  core-network:
volumes:
  core-data:
